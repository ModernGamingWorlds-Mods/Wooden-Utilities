plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.84'
    id 'net.darkhax.curseforgegradle' version '1.1.17'
    id 'com.modrinth.minotaur' version "2.+"
}

version = mod_version
group = mod_group_id

repositories {
    maven {
        name = 'CurseMaven'
        url = 'https://www.cursemaven.com'
        content {
            includeGroup('curse.maven')
        }
    }
    maven {
        url = "https://maven.theillusivec4.top/"
    }
    maven {
        name = "Shedaniel's maven"
        url = 'https://maven.shedaniel.me/'
        content {
            includeGroup('dev.architectury')
            includeGroup('me.shedaniel')
            includeGroup('me.shedaniel.cloth')
        }
    }
}


base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

//minecraft.accessTransformers.file rootProject.file('src/main/resources/META-INF/accesstransformer.cfg')
//minecraft.accessTransformers.entry public net.minecraft.client.Minecraft textureManager # textureManager

runs {
    configureEach {
        systemProperty 'forge.logging.markers', 'REGISTRIES'

        systemProperty 'forge.logging.console.level', 'debug'

        jvmArgument '-Xmx6G'

        modSource project.sourceSets.main
    }

    client {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    server {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
        programArgument '--nogui'
    }

    gameTestServer {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    data {
        programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }


dependencies {
    implementation("net.neoforged:neoforge:${neo_version}")

    // compileOnly "mezz.jei:jei-${mc_version}-common-api:${jei_version}"
    // compileOnly "mezz.jei:jei-${mc_version}-forge-api:${jei_version}"
    // runtimeOnly "mezz.jei:jei-${mc_version}-forge:${jei_version}"

    // rei support
    runtimeOnly ("me.shedaniel:RoughlyEnoughItems-neoforge:${rei_version}")
    compileOnly ("me.shedaniel:RoughlyEnoughItems-api-neoforge:${rei_version}")
    compileOnly ("me.shedaniel:RoughlyEnoughItems-default-plugin-neoforge:${rei_version}")

    //  Curios Support
    implementation "top.theillusivec4.curios:curios-neoforge:${curios_version}+${minecraft_version}"

    //Jade Support
    implementation "curse.maven:jade-324717:4980188"
}
tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version   : minecraft_version, minecraft_version_range: minecraft_version_range,
            neo_version         : neo_version, neo_version_range: neo_version_range,
            loader_version_range: loader_version_range,
            mod_id              : mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors         : mod_authors, mod_description: mod_description, pack_format_number: pack_format_number,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }

    if (System.getenv().CURSEFORGE_KEY) {
        task curseforge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) {
            apiToken = System.getenv().CURSEFORGE_KEY

            def mainFile = upload(project.curseforge_id, jar)
            mainFile.releaseType = 'alpha'
            mainFile.addGameVersion "NeoForge"
            mainFile.addGameVersion "${minecraft_version}"
            mainFile.addGameVersion "Java 17"

            mainFile.changelog = file("$project.rootDir/changelog.md")
            mainFile.changelogType = 'markdown'

            mainFile.addOptional("curios", "roughly-enough-items")
        }
    }

    if (System.getenv().MODRINTH_KEY) {
        modrinth {
            token = System.getenv().MODRINTH_KEY
            projectId = project.modrinth_id
            versionType = "alpha"
            versionName = "${mod_name} ${minecraft_version}"
            versionNumber = project.version
            uploadFile = jar
            changelog = file("$project.rootDir/changelog.md").text
            gameVersions = ["${minecraft_version}"]
            loaders = ["neoforge"]

            dependencies {
//              optional.project "jei"
                optional.project "curios"
//              optional.project "patchouli"
                optional.project "rei"
            }
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/repo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
